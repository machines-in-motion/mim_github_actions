name: "Clone and build"
description: "download sources in a workspace and build them."

inputs:
  treep_configurations:
    description: "Treep configurations to clone"
    required: true
    default: ""
  projects_or_repos:
    description: "New line separated list of repositories to clone."
    required: true
    default: ""
  devel_folder:
    description: "New line separated list of repositories to clone."
    required: true
    default: "${{github.workspace}}/../devel"

outputs:
  setup_file:
    description: 'Path to the setup.bash'
    value: ${{ inputs.devel_folder }}/workspace/install/setup.bash

runs:
  using: "composite"
  steps:
    #
    # Create the build folders
    #
    - name: Create separate environment for build and source dependencies.
      shell: bash
      run: >
        mkdir -p ${{ inputs.devel_folder }}/workspace/src

    - name: Debug
      shell: bash
      run: |
        echo "Input treep configurations:"
        while IFS= read -r configuration
        do
          if [ -n "$configuration" ]
          then
            echo "  - $configuration"
          fi
        done <<< "${{ inputs.treep_configurations }}"

        echo "Input project or repository names:"
        while IFS= read -r project_or_repo
        do
          if [ -n "$project_or_repo" ]
          then
            echo "  - $project_or_repo"
          fi
        done <<< "${{ inputs.projects_or_repos }}"

    #
    # Clone all.
    #
    - name: Clone the treep configurations.
      shell: bash
      working-directory: ${{ inputs.devel_folder }}
      run: |
        echo "Cloning treep configurations:"
        while IFS= read -r configuration
        do
          if [ -n "$configuration" ]
          then
            echo "- git clone $configuration"
            git clone $configuration
          fi
        done <<< "${{ inputs.treep_configurations }}"

    - name: Treep clone the repositories or projects.
      shell: bash
      working-directory: ${{ inputs.devel_folder }}
      run: |
        echo "Input project or repository names:"
        while IFS= read -r project_or_repo
        do
          if [ -n "$project_or_repo" ]
          then
            echo "treep --clone $project_or_repo"
            treep --clone $project_or_repo
          fi
        done <<< "${{ inputs.projects_or_repos }}"


    - name: Build the dependencies.
      shell: bash
      run: ls /opt/openrobots/
        
    #
    # Build the source dependencies
    #
    - name: Build the dependencies.
      working-directory: ${{ inputs.devel_folder }}/workspace
      shell: bash
      run: |
        if [ -f "/opt/openrobots/setup.bash" ]; then
            source /opt/openrobots/setup.bash
        fi
        if [ -f "/opt/ros/dashing/setup.bash" ]; then
            source /opt/ros/dashing/setup.bash
        fi
        echo colcon build \
          --event-handlers console_direct+ \
          --cmake-args \
            -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
            -DPYBIND11_TEST=OFF \
            -DBUILD_TESTING=OFF
        colcon build \
          --event-handlers console_direct+ \
          --cmake-args \
            -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
            -DPYBIND11_TEST=OFF \
            -DBUILD_TESTING=OFF
